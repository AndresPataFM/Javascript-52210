// üü† ¬øQue son? üü†
// Las librer√≠as son c√≥digo ajeno que podes itnroducir al tuyo mediante distintos m√©todos que permite utilizar l√≥gica programada por otro.

// üü† ¬øCuando utilizarlas? üü†
/* Normalmente se utilizan cuando:
‚óΩ Uno evalua que la funcionalidad deseada tardar√≠a m√°s de lo que valdr√≠a m√°s el tiempo ahorrado para el proyecto crear el c√≥digo desde 0. 
‚óΩ Es una funcionalidad muy compleja que todav√≠a no entiende.
‚óΩ Te lo piden tu empresa (muchas empresas tienen librerias de estilo/c√≥digo propias).
*/ 

//  üü† Pasos a seguir üü†

// Ver compatibilidad de dependencias con tu proyecto
// Muchas veces las librer√≠as deseadas no estan actualizadas a la versi√≥n actual de c√≥digo necesario o uno esta utilizando c√≥digo de legado que no es compatible con una funcionalidad utilizada. A su vez, hay librer√≠as que pueden depender de otras (en su momento bootstrap utilizaba jQuery y se necesitaban ambos para su funcionamiento)

// Leer documentaci√≥n
// Este es el paso m√°s importante, te ense√±a como utilizar el c√≥digo sin tener que leerlo entero. Normalmente est√° en ingles.

// Instalar en el proyecto
// Actualmente pueden:
/* 
‚óΩ Copiar el link al cdn
‚óΩ Descargar en local 
*/
// A futuro podr√°n:
/* 
‚óΩ Descargarlo y utilizar el js como m√≥dulos apra importar lo necesario
‚óΩ Instalarlo mediante npm
*/
// Nota: fijense si el c√≥digo necesita llamar a una funci√≥n para ser funcional.
// Nota2: de no modificar el c√≥digo de la librer√≠a, es recomendable utilizar un js minificado ya que pesa menos y es m√°s r√°pido.

// Datos extra:
// No es recomendable utilizar m√°s librer√≠as de las necesarias, entorpecen el c√≥digo y uno suele tener poco control sobre ellas, lo que puede llevar a complicaciones.


// Librer√≠as recomendadas por Coder
// Sweet alert 2: https://sweetalert2.github.io/
// Luxon: https://moment.github.io/luxon/#/
// Toastify: https://apvarun.github.io/toastify-js/

// Uno no esta limitado a estas pero son de las mejores documentadas.



// Sweet alert 2

const imprimoConsola = (dato)=>{
    console.log("Imprimo esto", dato)
}

// utilizar datos de un input de Swal
const { value: text } = Swal.fire({
    title: 'Input email address',
    input: 'text',
    inputLabel: 'Your email address',
    inputPlaceholder: 'Enter your email address'
}).then(result=>imprimoConsola(result.value))

// Luxon
var DateTime = luxon.DateTime;

Swal.fire({
    // conseguir fecha de luxon
    title: DateTime.now().toLocaleString(DateTime.DATETIME_FULL),
    showConfirmButton: true,
})

// Toastify

const boton = document.getElementById("agregar")
boton.addEventListener("click", ()=>{
    // m√°s l√≥gica
    Toastify({
        text: "Producto agregado al carrito",
        duration: 3000
        }).showToast();
})