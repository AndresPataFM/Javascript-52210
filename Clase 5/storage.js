// üü† Storage üü†
// Los distintos tipos de almacenamiento

// üî∂ JSON üî∂
// JavaScript Language Notation
// Es un formato de informaci√≥n que permite intercambiar datos entre distintos lenguajes
// Se pueden crear archivos de formato JSON con ".json"
// En burdo, combierte los datos en un string de manera que puedan ser interpretados
// NO SIRVE PARA FUNCIONES

// üî∏ Objeto JSON üî∏
// https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/JSON
// Es el objeto con m√©todos que tiene Js para manipular/convertir datos relacionados a JSON


// üîπ Stringify üîπ 
// JSON.stringify(variable)
// Convierte una variable en un string JSON

// üîπ Parse üîπ 
// JSON.parse(variable)
// Convierte un string JSON en datos de JS

// üü° Los arrays paran de ser  convierten a JSON y se vuelven a Js
// ‚õî Los objetos pierden sus m√©todos al convertirse en JSON

// üî∂ Local Storage üî∂
// https://developer.mozilla.org/es/docs/Web/API/Window/localStorage
// Informacion que se guarda localmente en el ordenador
// Solo maneja strings (los JSON son strings)
// El objeto es localStorage
// localStorage.setItem("Numero", 33)

// üî∏ setItem üî∏
// Guarda un valor en el localStorage
// ambos son strings
// localStorage.setItem(clave, valor)

// üî∏ getItem üî∏
// Busca un valor en el localStorage
// La clave siemrpe es uns tring
// localStorage.setItem(clave)
// retorna el string asociado a la clave
// de no encontrar la clave retorna "null"

// üî∏ clear üî∏
// Limpia el local storage
// localStorage.clear()

// üî∂ Session Storage üî∂
// https://developer.mozilla.org/es/docs/Web/API/Window/sessionStorage
// Guarda informaci√≥n localmente en el ordenador por la sesi√≥n actual (hasta que se cierre el ordenador)
// El objeto es sessionStorage
// Solo maneja strings (los JSON son strings)
// Tiene los mismos m√©todos que el localStorage


let numero

// sabemos que si no lo encuentra es null
// null es falsey
if(localStorage.getItem("Numero")===null||localStorage.getItem("Numero")===NaN){
    numero = "No se ha ingresado un nro previamente"
} else {
    numero = localStorage.getItem("Numero")
}

const guardarNro = ()=>{
    const pedirNro = prompt(`Ingrese un n√∫mero.\n El nro anterior es: ${numero}`)
    localStorage.setItem("Numero", Number(pedirNro))
}

guardarNro()