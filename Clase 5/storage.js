// ðŸŸ  Storage ðŸŸ 
// Los distintos tipos de almacenamiento

// ðŸ”¶ JSON ðŸ”¶
// JavaScript Language Notation
// Es un formato de informaciÃ³n que permite intercambiar datos entre distintos lenguajes
// Se pueden crear archivos de formato JSON con ".json"
// En burdo, combierte los datos en un string de manera que puedan ser interpretados
// NO SIRVE PARA FUNCIONES

// ðŸ”¸ Objeto JSON ðŸ”¸
// https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/JSON
// Es el objeto con mÃ©todos que tiene Js para manipular/convertir datos relacionados a JSON

// ðŸ”¹ Stringify ðŸ”¹ 
// JSON.stringify(variable)
// Convierte una variable en un string JSON

// ðŸ”¹ Stringify ðŸ”¹ 
// JSON.parse(variable)
// Convierte un string JSON en datos de JS

// ðŸŸ¡ Los arrays paran de ser  convierten a JSON y se vuelven a Js
// â›” Los objetos pierden sus mÃ©todos al convertirse en JSON

// ðŸ”¶ Local Storage ðŸ”¶
// https://developer.mozilla.org/es/docs/Web/API/Window/localStorage
// Informacion que se guarda localmente en el ordenador
// Solo maneja strings (los JSON son strings)
// El objeto es localStorage

// ðŸ”¸ setItem ðŸ”¸
// Guarda un valor en el localStorage
// ambos son strings
// localStorage.setItem(clave, valor)

// ðŸ”¸ getItem ðŸ”¸
// Busca un valor en el localStorage
// La clave siemrpe es uns tring
// localStorage.setItem(clave)
// retorna el string asociado a la clave
// de no encontrar la clave retorna "null"

// ðŸ”¸ clear ðŸ”¸
// Limpia el local storage
// localStorage.clear()

// ðŸ”¶ Session Storage ðŸ”¶
// https://developer.mozilla.org/es/docs/Web/API/Window/sessionStorage
// Guarda informaciÃ³n localmente en el ordenador por la sesiÃ³n actual (hasta que se cierre el ordenador)
// El objeto es sessionStorage
// Solo maneja strings (los JSON son strings)
// Tiene los mismos mÃ©todos que el localStorage