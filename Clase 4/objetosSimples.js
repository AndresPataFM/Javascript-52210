// ğŸŸ  Objetos ğŸŸ 
// Tipo de dato capaz de almacenar varias propiedades y/o mÃ©todos de manera clave/valor. cada propiedad y/o mÃ©todo de este se declara con el uso de ": y "," dentro de llames {}. No necesita de palabra reservada para declararlo.

const objeto1 = {
    // clave: valor,
    propiedad: "valor",
    propiedad2: 123,
    metodo: function (){
        console.log("lÃ³gica")
    },
    metodo2: (a,b)=>a+b
};
const objeto1alt = {propiedad: "valor",propiedad2: 123,metodo: function (){console.log("lÃ³gica")},metodo2: (a,b)=>a+b};
console.log();

// Desde ES5 Js permite el uso de "trailing commas", comas al final del contenido

// ğŸ”¶ Propiedades ğŸ”¶
// Son "variables internas" del objeto, estas puedes ser cualquiera de los tipos de datos vistos, arrays y/u objetos.
// No se pueden utilizar "-"

const objeto2 = {
    propiedad1:"hola", // Strings
    propiedad2: 2023, // NÃºmeros 
    propiedad3: false, // Booleanos
    propiedad4: 123*4-5/7, // Cualquier cosa que se pueda poner como variable, como null, undefined, etc.
    propiedad5: {
        propHijo1: "Los objetos pueden tener objetos hijos"
    },
    propiedad6: [1,2,3] // Las propiedades pueden ser arrays
};

// ğŸ”¶ MÃ©todos ğŸ”¶
//  Son "funciones internas" de los objetos, se declaran de la misma manera que als propiedades.

const division = (a,b)=>a/b

const objeto3 = {
    saludo: "Hola",
    sumar: function (a,b){
        return a+b
    },
    restar: (a,b)=>{
        return a-b
    },
    multiplicar: (a,b)=>a*b,
    dividir: division,
    saludar: function(){
        return `${this.saludo}`;
    } // el this no funciona bien con funciones flecha
};


// ğŸ”¶ Llamar propiedades/mÃ©todos ğŸ”¶
// objeto.propiedad
// objeto.mÃ©todo(parametros de ser necesarios)

console.log(objeto3.saludar());

// ğŸ”¸ Ejemplo ğŸ”¸

const usuario = {
    eMail: "asd@asd.com",
    userName: "oO_Mauricio_Oo",
    password: "123ContraseÃ±a",
    name: "Mauricio",
    lastName: "Perez",
    edad: 27,
    showData1: function(){
        return `${this.eMail} | ${this.userName} | ${this.password} | ${this.name} | ${this.lastName} | ${this.edad} `
    }, //funciona al ser function
    showData2: ()=> `${this.eMail} | ${this.userName} | ${this.password} | ${this.name} | ${this.lastName} | ${this.edad} `
    // muestra undefined
};

// ğŸ”¹ RecomendaciÃ³n ğŸ”¹
// Vean el objeto reservado "Object" y sus mÃ©todos: https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Object
